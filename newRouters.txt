router.get( '/getAllFosterWithOrphan',  (req, res) => {

       
                    Orphan.aggregate(
                        [
                            {
                              '$lookup': {
                                'from': 'visitations', 
                                'localField': 'id', 
                                'foreignField': 'orphan_id', 
                                'as': 'visits'
                              }
                            }, {
                              '$unwind': {
                                'path': '$visits', 
                                'preserveNullAndEmptyArrays': true
                              }
                            }, {
                              '$lookup': {
                                'from': 'users', 
                                'localField': 'visits.user_id', 
                                'foreignField': 'id', 
                                'as': 'users'
                              }
                            }, {
                              '$unwind': {
                                'path': '$users', 
                                'preserveNullAndEmptyArrays': true
                              }
                            }, {
                              '$match': {
                                'deleted': false
                              }
                            }, {
                              '$project': {
                                "id": 1,
                                "status": 1,
                                "deleted": 1,
                                "firstname": 1,
                                "lastname": 1,
                                "gender": 1, 
                                "age": 1,
                                "height": 1,
                                "weight":1,
                                "waist": 1,
                                "dob": 1,
                                "birth_status": 1,
                                "present_whereabouts": 1,
                                "date_admission":  1,
                                "date_surrendered":  1,
                                "category": 1,
                                "moral": 1,
                                "dateAdded": 1,
                                'foster': {
                                  '$concat': [
                                    {
                                      '$ifNull': [
                                        '$users.firstname', ''
                                      ]
                                    }, ' ', {
                                      '$ifNull': [
                                        '$users.lastname', ''
                                      ]
                                    }, ' '
                                  ]
                                }
                              }
                            }
                          ],(err, orphan) => {
                            // Check if error was found or not
                            if (err) {
                                res.json({ success: false, message: err }); // Return error message
                            } else {
                                // Check if blogs were found in database
                                if (!orphan) {
                                    res.json({ success: false, message: 'No Orphan found.' }); // Return error of no blogs found
                                } else {
                                res.json({ success: true, orphan: orphan });
                                }
                            }
                        }).sort({ 'dateAdded': 1 }); // Sort blogs from newest to oldest

    }  );


    router.get('/getAllActiveOrphanApi', (req, res) => {

        Orphan.aggregate([
            {
                $match : {
                    "status" : "active",
                  }
            },
            {
                $project: {
                    id: 1,
                    orphans: { $concat: [
                        { $ifNull: [ "$firstname", "" ] }, " ",
                        { $ifNull: [ "$lastname", "" ] }, " ",
                       ]
                    }
                }
            }
        ], (err, results) => {

                if( err ) return res.json({ success:false, message:err.message });
                if( results.length ){
                    return res.json({ success:true, data: results });
                }else{
                    return res.json({ success:false, message: "No data found!", toaster: 'off' , data : [] });
                }
            }
        );
    });


    router.get('/getTotalOrphan', (req, res) => {

        // Search database for all blog posts
        Orphan.countDocuments({ deleted: 'false' }, (err, orphan) => {
            // Check if error was found or not
            if (err) {
                res.json({ success: false, message: err }); // Return error message
            } else {
                // Check if SocialWorker were found in database
                if (!orphan) {
                    res.json({ success : true, name: 'Orphans' , total: orphan }); // Return error of no Volunteer found
                } else {
                    res.json({ success : true, name: 'Orphans' , total: orphan }); // Return success and SocialWorker array
                }
            }
        }); // Sort SocialWorker from newest to oldest
    });



    